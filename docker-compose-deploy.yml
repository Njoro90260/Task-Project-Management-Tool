version: '3.9'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  
  app:
    build: ./app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - CREATE_SUPERUSER=${CREATE_SUPERUSER:-false}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
    command: sh -c "/scripts/entrypoint.sh"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    expose:
      - "8000"

  proxy:
    build:
      context: ./proxy
    image: nginx:1.25-alpine
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/vol/static:ro
      - media_volume:/vol/media:ro
    ports:
      - "80:80"
    depends_on:
      - app
    restart: unless-stopped

  # nginx:
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #     - ./app/static:/static
  #     - ./app/media:/media

  #   depends_on:
  #     - app

volumes:
  postgres_data:
  static_volume:
  media_volume: