version: '3.9'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - global-proxy-net
  app:
    image: 484907498501.dkr.ecr.eu-central-1.amazonaws.com/my_app:v2.1-official
    volumes:
      - static_volume:/vol/static
      - media_volume:/vol/media
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    user: "0"
    networks:
      - global-proxy-net

  init_volumes:
    image: alpine
    command: sh -c "mkdir -p /vol/static /vol/media && chown -R 1000:1000 /vol/static /vol/media && chmod -R 775 /vol/static /vol/media"
    volumes:
      - static_volume:/vol/static
      - media_volume:/vol/media
    restart: "no"

  proxy:
    build:
      context: ./proxy
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/vol/static:ro
      - media_volume:/vol/media:ro
    expose:
      - "8002"
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - global-proxy-net

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  global-proxy-net:
    external: true